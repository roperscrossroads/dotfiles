#!/usr/bin/env bash
source "$DOROTHY/sources/bash.bash"

# TODO: add list of dirs that should never be allowed accidental overwrite.

# TODO: if regular existing > prompt user overwrite??? yes/no

existing="${1:-"$(ask --question="What is the existing path that you want to symlink elsewhere?" --required)"}"
symlink="${2:-"$(ask --question="What is the new path that you want to redirect?" --required)"}"
force="${FORCE_LINK:-"$(get-flag-value force --missing=no -- "$@")"}"

# echo ">>> $symlink"

# 1. check if symlink already is a link. if true force create new link
if test -L "$symlink"; then
    if test "$force" = 'yes' || confirm-bool "Symlink already exists at $symlink, recreate it to point to $existing?"; then
        echo-style --blue "Re-linking: $(basename $existing) -> $symlink"
        rm -rf "$symlink" # be carefull;
        ln -s "$existing" "$symlink"
    else
        exit 1
    fi

# 2. check if $symlink already is file/dir
elif test -d "$symlink" -o -f "$symlink"; then
    echo-style --red "Cannot link: \`$(basename $existing)\` is a regular file/dir and needs to be removed manually first..."

# 3. if not link, and not file/dir > create new symlink
else
    echo-style --green "Symlinking: $(basename $existing) -> $symlink"

    # create dirs up until $symlink in case
    # $symlink is a file and in a completely new
    # location.

    # # TODO: how to get parent dir of symlink destination if it doesn't
    # if test -f "$symlink"; then
    #     mkdir -p "$(dirname $symlink)"
    # else test -d "$symlink"; then
    #     # exist so that we can create it and then create
    #     # the link?
    #     parentdir=$(dirname $symlink)
    #     echo --red "link is dir / parent: $parentdir"
    # fi

    ln -s "$existing" "$symlink"
fi
